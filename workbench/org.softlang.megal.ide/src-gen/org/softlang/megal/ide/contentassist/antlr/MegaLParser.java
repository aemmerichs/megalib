/*
 * generated by Xtext 2.12.0
 */
package org.softlang.megal.ide.contentassist.antlr;

import com.google.inject.Inject;
import java.util.HashMap;
import java.util.Map;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;
import org.softlang.megal.ide.contentassist.antlr.internal.InternalMegaLParser;
import org.softlang.megal.services.MegaLGrammarAccess;

public class MegaLParser extends AbstractContentAssistParser {

	@Inject
	private MegaLGrammarAccess grammarAccess;

	private Map<AbstractElement, String> nameMappings;

	@Override
	protected InternalMegaLParser createParser() {
		InternalMegaLParser result = new InternalMegaLParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getImportAccess().getAlternatives(), "rule__Import__Alternatives");
					put(grammarAccess.getStatementAccess().getAlternatives(), "rule__Statement__Alternatives");
					put(grammarAccess.getTypeAccess().getAlternatives_2(), "rule__Type__Alternatives_2");
					put(grammarAccess.getModuleAccess().getGroup(), "rule__Module__Group__0");
					put(grammarAccess.getModuleAccess().getGroup_3(), "rule__Module__Group_3__0");
					put(grammarAccess.getImportNoAccess().getGroup(), "rule__ImportNo__Group__0");
					put(grammarAccess.getSubstitutesAccess().getGroup(), "rule__Substitutes__Group__0");
					put(grammarAccess.getSubstituteBlockAccess().getGroup(), "rule__SubstituteBlock__Group__0");
					put(grammarAccess.getSubstituteBlockAccess().getGroup_2(), "rule__SubstituteBlock__Group_2__0");
					put(grammarAccess.getSubstituteAccess().getGroup(), "rule__Substitute__Group__0");
					put(grammarAccess.getBlockAccess().getGroup(), "rule__Block__Group__0");
					put(grammarAccess.getTypeAccess().getGroup(), "rule__Type__Group__0");
					put(grammarAccess.getTypeAccess().getGroup_3(), "rule__Type__Group_3__0");
					put(grammarAccess.getInstanceAccess().getGroup(), "rule__Instance__Group__0");
					put(grammarAccess.getInstanceAccess().getGroup_3(), "rule__Instance__Group_3__0");
					put(grammarAccess.getInstanceAccess().getGroup_4(), "rule__Instance__Group_4__0");
					put(grammarAccess.getInstanceAccess().getGroup_5(), "rule__Instance__Group_5__0");
					put(grammarAccess.getRelDeclAccess().getGroup(), "rule__RelDecl__Group__0");
					put(grammarAccess.getRelDeclAccess().getGroup_2(), "rule__RelDecl__Group_2__0");
					put(grammarAccess.getRelInstAccess().getGroup(), "rule__RelInst__Group__0");
					put(grammarAccess.getRelInstAccess().getGroup_2(), "rule__RelInst__Group_2__0");
					put(grammarAccess.getRelEdgeAccess().getGroup(), "rule__RelEdge__Group__0");
					put(grammarAccess.getRelTypesAccess().getGroup(), "rule__RelTypes__Group__0");
					put(grammarAccess.getFunDeclAccess().getGroup(), "rule__FunDecl__Group__0");
					put(grammarAccess.getFunDeclAccess().getGroup_3(), "rule__FunDecl__Group_3__0");
					put(grammarAccess.getFunDeclAccess().getGroup_6(), "rule__FunDecl__Group_6__0");
					put(grammarAccess.getFunAppAccess().getGroup(), "rule__FunApp__Group__0");
					put(grammarAccess.getFQNAccess().getGroup(), "rule__FQN__Group__0");
					put(grammarAccess.getFQNAccess().getGroup_1(), "rule__FQN__Group_1__0");
					put(grammarAccess.getModuleAccess().getNameAssignment_1(), "rule__Module__NameAssignment_1");
					put(grammarAccess.getModuleAccess().getImportsAssignment_2(), "rule__Module__ImportsAssignment_2");
					put(grammarAccess.getModuleAccess().getBlocksAssignment_3_0(), "rule__Module__BlocksAssignment_3_0");
					put(grammarAccess.getModuleAccess().getStatementsAssignment_3_1(), "rule__Module__StatementsAssignment_3_1");
					put(grammarAccess.getImportNoAccess().getImportNamespaceAssignment_1(), "rule__ImportNo__ImportNamespaceAssignment_1");
					put(grammarAccess.getSubstitutesAccess().getImportNamespaceAssignment_1(), "rule__Substitutes__ImportNamespaceAssignment_1");
					put(grammarAccess.getSubstitutesAccess().getSubstituteBlocksAssignment_3(), "rule__Substitutes__SubstituteBlocksAssignment_3");
					put(grammarAccess.getSubstituteBlockAccess().getSubstitutesAssignment_1(), "rule__SubstituteBlock__SubstitutesAssignment_1");
					put(grammarAccess.getSubstituteBlockAccess().getSubstitutesAssignment_2_1(), "rule__SubstituteBlock__SubstitutesAssignment_2_1");
					put(grammarAccess.getSubstituteAccess().getLeftAssignment_0(), "rule__Substitute__LeftAssignment_0");
					put(grammarAccess.getSubstituteAccess().getRightAssignment_2(), "rule__Substitute__RightAssignment_2");
					put(grammarAccess.getBlockAccess().getDescriptionAssignment_2(), "rule__Block__DescriptionAssignment_2");
					put(grammarAccess.getBlockAccess().getRationaleAssignment_4(), "rule__Block__RationaleAssignment_4");
					put(grammarAccess.getTypeAccess().getNameAssignment_0(), "rule__Type__NameAssignment_0");
					put(grammarAccess.getTypeAccess().getSupertypeAssignment_2_0(), "rule__Type__SupertypeAssignment_2_0");
					put(grammarAccess.getTypeAccess().getLinksAssignment_3_3(), "rule__Type__LinksAssignment_3_3");
					put(grammarAccess.getInstanceAccess().getNameAssignment_0(), "rule__Instance__NameAssignment_0");
					put(grammarAccess.getInstanceAccess().getTypeAssignment_2(), "rule__Instance__TypeAssignment_2");
					put(grammarAccess.getInstanceAccess().getBindsAssignment_3_3(), "rule__Instance__BindsAssignment_3_3");
					put(grammarAccess.getInstanceAccess().getLinksAssignment_4_3(), "rule__Instance__LinksAssignment_4_3");
					put(grammarAccess.getInstanceAccess().getRelEdgesAssignment_5_1(), "rule__Instance__RelEdgesAssignment_5_1");
					put(grammarAccess.getRelDeclAccess().getNameAssignment_0(), "rule__RelDecl__NameAssignment_0");
					put(grammarAccess.getRelDeclAccess().getReltedgesAssignment_1(), "rule__RelDecl__ReltedgesAssignment_1");
					put(grammarAccess.getRelDeclAccess().getReltedgesAssignment_2_1(), "rule__RelDecl__ReltedgesAssignment_2_1");
					put(grammarAccess.getRelInstAccess().getLeftAssignment_0(), "rule__RelInst__LeftAssignment_0");
					put(grammarAccess.getRelInstAccess().getReledgesAssignment_1(), "rule__RelInst__ReledgesAssignment_1");
					put(grammarAccess.getRelInstAccess().getReledgesAssignment_2_1(), "rule__RelInst__ReledgesAssignment_2_1");
					put(grammarAccess.getRelEdgeAccess().getRelAssignment_0(), "rule__RelEdge__RelAssignment_0");
					put(grammarAccess.getRelEdgeAccess().getRightAssignment_1(), "rule__RelEdge__RightAssignment_1");
					put(grammarAccess.getRelTypesAccess().getLeftAssignment_1(), "rule__RelTypes__LeftAssignment_1");
					put(grammarAccess.getRelTypesAccess().getRightAssignment_3(), "rule__RelTypes__RightAssignment_3");
					put(grammarAccess.getFunDeclAccess().getNameAssignment_0(), "rule__FunDecl__NameAssignment_0");
					put(grammarAccess.getFunDeclAccess().getDomainsAssignment_2(), "rule__FunDecl__DomainsAssignment_2");
					put(grammarAccess.getFunDeclAccess().getDomainsAssignment_3_1(), "rule__FunDecl__DomainsAssignment_3_1");
					put(grammarAccess.getFunDeclAccess().getRangesAssignment_5(), "rule__FunDecl__RangesAssignment_5");
					put(grammarAccess.getFunDeclAccess().getRangesAssignment_6_1(), "rule__FunDecl__RangesAssignment_6_1");
					put(grammarAccess.getFunAppAccess().getFAssignment_0(), "rule__FunApp__FAssignment_0");
					put(grammarAccess.getFunAppAccess().getInAssignment_2(), "rule__FunApp__InAssignment_2");
					put(grammarAccess.getFunAppAccess().getOutAssignment_5(), "rule__FunApp__OutAssignment_5");
				}
			};
		}
		return nameMappings.get(element);
	}
			
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public MegaLGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(MegaLGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
