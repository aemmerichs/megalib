/*
 * generated by Xtext 2.12.0
 */
package org.softlang.megal.generator

import org.eclipse.emf.ecore.resource.Resource
import org.eclipse.xtext.generator.AbstractGenerator
import org.eclipse.xtext.generator.IFileSystemAccess2
import org.eclipse.xtext.generator.IGeneratorContext
import org.softlang.megal.megaL.MegaLPackage
import org.softlang.megal.megaL.impl.ModuleImpl

/**
 * Generates code from your model files on save.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#code-generation
 */
class MegaLJsonGenerator extends AbstractGenerator {

	override void doGenerate(Resource input, IFileSystemAccess2 fsa, IGeneratorContext context) {
		fsa.generateFile(input.fileName, (input.contents.head as ModuleImpl).toJson)
	}
	
	private def toJson(ModuleImpl it){
		'''Model: «it.name»
		«FOR block : it.blocks»
		«block.description»
		«block.eContainer»
		«ENDFOR»
		'''
	}

	
	private def fileName(Resource res) {
		// generate the json file into the "src-gen" folder using the package structure of the model file
		res.URI.segments.drop(3).join("/").replace(".", "_") + ".json"
	}

}
