module java.Jackson

import java.JavaPlatform

/* Jackson allows the serialization of Java objects into
JSON files. */
JSONWare : TechnologySpace
    = "http://www.json.org/"
JSON : DataRepresentationLanguage
    = "https://en.wikipedia.org/wiki/JSON"
    belongsTo JSONWare
Jackson : Library
    = "https://github.com/FasterXML"
    belongsTo JSONWare
    uses Java
    implements JSON
Jackson.ObjectMapper : Library
    = "https://github.com/FasterXML/jackson-databind/blob/master/src/main/java/com/fasterxml/jackson/databind/ObjectMapper.java"
    partOf Jackson
    uses Serialization
    uses Java

/* In a use case one has a Java-based model. Now if you have an instance
of this model and use Jackson to translate it into JSON, the output is 
a JSON String that corresponds to the instance. */
readValue : JSON -> JavaObject
writeValue : JavaObject -> JSON
Jackson.ObjectMapper implements readValue
    implements writeValue
?ModelClass : Artifact
    elementOf Java
    hasRole Schema
    manifestsAs File
?aModel : Artifact
    elementOf JavaObject
    hasRole Value
    manifestsAs Transient
    conformsTo ?ModelClass
?aJSONString : Artifact 
    elementOf JSON
    hasRole Value
    manifestsAs Transient
    correspondsTo ?aModel
readValue(?aJSONString) |-> ?aModel
writeValue(?aModel) |-> ?aJSONString