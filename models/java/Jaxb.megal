module java.JAXB

import XML

/* JAXB enables the binding of java objects to XML files */
JAXB : Library
    = "https://jaxb.java.net/2.2.4/docs/xjc.html"
    belongsTo XML-Ware
    supports XMLDataBinding
    partOf JavaPlatform
    uses Java

/* The main component is the bindingCompiler */
bindingCompiler : CodeGenerator
bindingFramework : Library
bindingCompiler partOf JAXB
bindingFramework partOf JAXB

JAXB.Java : ProgrammingLanguage
    subsetOf Java

generation : XSD -> JAXB.Java
bindingCompiler implements JAXB.Java
    implements XSD
    implements generation

?xmlTypes : Artifact<XSD>
?xmlTypes manifestsAs File+
Schema : Role
?xmlTypes hasRole Schema
?javaClasses : Artifact<JAXB.Java>
?javaClasses manifestsAs File+
Model : Role
?javaClasses hasRole Model
generation(?xmlTypes) |-> ?javaClasses
?javaClasses correspondsTo ?xmlTypes


Annotation : Concept
bindingFramework facilitates Annotation
?javaClasses uses Annotation

ConceptualProcess < Concept
Serialization : ConceptualProcess
bindingFramework facilitates Serialization
CodeGeneration : ConceptualProcess
bindingCompiler facilitates CodeGeneration
bindingCompiler uses CodeGeneration

Validation : Concept
JAXB facilitates Validation

JVM.ObjectGraphs : ObjectLanguage
?anObjectGraph : Value<JVM.ObjectGraphs>
?anObjectGraph manifestsAs Transient
?anObjectGraph conformsTo ?javaClasses
?anXMLDoc : Data<XML>
?anXMLDoc manifestsAs File
?anXMLDoc conformsTo ?xmlTypes
unmarshalling : XML -> JVM.ObjectGraphs
unmarshalling(?anXMLDoc) |-> ?anObjectGraph
?anXMLDoc correspondsTo ?anObjectGraph

?application : Application
?application uses Java
?aMethodCall : SourceCode<Java>
?aMethodCall manifestsAs Fragment
?aMethodCall uses bindingFramework
?aMethodCall uses unmarshalling

bindingFramework = "https://docs.oracle.com/javaee/5/api/javax/xml/bind/package-summary.html"