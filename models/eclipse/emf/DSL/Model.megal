module eclipse.emf.dsl.Model

import eclipse.emf.Core
import java.JavaPlatform



?DslEObjects : ValueLanguage;
    subsetOf EObjects.
    
// Meta-model in Java
?dslJavaModel : Artifact;
    partOf ?DevelopmentWorkspace;
    elementOf EcoreJava;
    hasRole MdeMetamodel;
    manifestsAs File+;
    defines ?DslEObjects.

?dslResourceSet : Artifact;
    elementOf ResourceSet;
    manifestsAs Transient.
?dslResource : Artifact;
    elementOf Resource;
    manifestsAs Transient;
    partOf ?dslResourceSet.
// Instance in Java
?dslEObject : Artifact;
    partOf ?dslResource;
    elementOf ?DslEObjects;
    manifestsAs Transient;
    hasRole MdeModel;
    conformsTo ?dslJavaModel.



/* Plugin overview*/
?dslModelPluginJar : Artifact;
    elementOf Jar;
    manifestsAs File;
    partOf ?DevelopmentWorkspace.
?DslModelPlugin : Plugin;
    reuses EclipseCoreRuntime;
    reuses EmfEcore;
    reuses EmfEcoreXmi;
    deployedAs ?dslModelPluginJar.

/* While Ecore is the language for metamodels written in Xmi, there are multiple existing
languages that are subset of Xmi that form DSLs. But this set to serialize models in Xmi 
is different from the metamodeling set. */


    
?dslMetaModel : Artifact;
    partOf ?DevelopmentWorkspace;
    elementOf EcoreXmi;
    hasRole MdeMetamodel;
    manifestsAs File;
    defines ?DslXmi.
generateJava(?dslGenModel,?dslMetaModel) |-> ?dslJavaModel.

/* Generic Model Validation */
EOperations : ValueLanguage;
    subsetOf ?.
?validationXmi : Artifact;
    elementOf EOperations;
    hasRole Constraint;
    manifestsAs Fragment;
    partOf ?dslMetaModel.
?validationJava : Artifact
    elementOf Java;
    hasRole Constraint;
    manifestsAs Fragment;
    partOf ?dslJavaModel. //strictly speaking the FSMImpl.
DiagnosticChain : ValueLanguage;
    = "emfJavaDoc::common/util/DiagnosticChain.html";
    = "eclipseHelp::?topic=%2Forg.eclipse.emf.doc%2Freferences%2Foverview%2FEMF.Validation.html".
    ^implements EmfEcore.
?diagnosticChain0 : Artifact;
    elementOf DiagnosticChain;
    hasRole Log;
    manifestsAs Transient.
?diagnosticChain1 : Artifact;
    elementOf DiagnosticChain;
    hasRole Log;
    manifestsAs Transient.
?eBooleanResult : Artifact;
    elementOf EBoolean;
    manifestsAs Transient.
validation : ?DslJvmObjects # DiagnosticChain -> EBoolean # DiagnosticChain.
validation(?dslEObject,?diagnosticChain0) |-> (?eBooleanResult,?diagnosticChain1).
?DslModelPlugin implements validation.


?DslXmi : DataExchangeLanguage; //TODO: Defined or Implemented? keep it or remove it
    subsetOf Xmi.
?dslGenModel : Artifact;
    partOf ?DevelopmentWorkspace;
    elementOf GeneratorXmi;
    hasRole Configuration;
    manifestsAs File.