module common.Language

import common.Concept

/* A language is a set of digital entities. This not only includes
entities having a concrete syntax but runtime data as well.
See the Megalib-Wiki for explanations. */
Language < Entity;
    = "wikipedia::Computer_language";
    = "https://github.com/softlang/megalib/wiki/Language-Classification/".
ProgrammingLanguage < Language; 
    = "wikipedia::Programming_language".
AssemblyLanguage < Language;
    = "wikipedia::Assembly_language".  
MachineLanguage < Language;
    = "wikipedia::Machine_code".
CommandLineLanguage < Language; 
    = "wikipedia::Command-line_interface".
AnnotationLanguage < Language;
	= "wikipedia::Annotation#Software_engineering".    

DocumentLanguage < Language;
    = "wikipedia::Document". 
KnowledgeRepresentationLanguage < Language; 
    = "wikipedia::Category:Knowledge_representation_languages".
DataExchangeLanguage < Language; 
    = "wikipedia::Data_exchange".
StylesheetLanguage < Language; 
    = "wikipedia::Style_sheet_language".    
DatabaseManagementLanguage < Language;
    = "wikipedia::Create,_read,_update_and_delete".
    
TransformationLanguage < Language; 
    = "wikipedia::Transformation_language";
    = "wikipedia::Model_transformation".
QueryLanguage < Language; 
    = "wikipedia::Query_language".

GrammarLanguage < Language; 
    = "wikipedia::Formal_grammar".
SchemaLanguage < Language; 
    = "wikipedia::Category:Data_modeling_languages".

SoftwareDesignLanguage < Language;  
    = "wikipedia::Modeling_language".

ConfigurationLanguage < Language;
    = "wikipedia::Configuration_file" .
BuildScriptLanguage < Language; 
    = "wikipedia::Build_automation".

ReferenceLanguage < Language; 
    = "wikipedia::Reference".

MessageLanguage < Language;
    = "wikipedia::Request-response";
    = "wikipedia::Message_passing".
ValueLanguage < Language; 
    = "wikipedia::Value_(computer_science)".
ContainerLanguage < Language; 
    = "wikipedia::Digital_container_format".
DatabaseLanguage < Language; 
    = "wikipedia::Database".
TemplateLanguage < Language; 
    = "wikipedia::Template_processor".
LogLanguage < DocumentLanguage;
    = "wikipedia::Logfile".
ShadingLanguage < Language;
	= "wikipedia::Shading_language".

subsetOf < Language # Language;
    = "wikipedia::Subset".
embeddedInto < Language # Language;
    = "https://wiki.haskell.org/Embedded_domain_specific_language".
dialectOf < Language # Language;
    = "wikipedia::Dialect_(computing)".
influencedBy < Language # Language;
    = "https://exploringdata.github.io/vis/programming-languages-influence-network/".
composedOf < Language # Language;
    = "https://dblp.uni-trier.de/db/conf/sle/". //researchy term 'Language Composition'. composedOf is now overloaded.

belongsTo < Language # TechnologySpace;
    = "https://www.researchgate.net/publication/228580557_Technological_Spaces_An_Initial_Appraisal".
supports < Language # ProgrammingDomain.
facilitates < Language # Paradigm.
hasConstruct < Paradigm # Construct. 
facilitates < Language # Construct.

encodes < Language # Role . //Experimental
facilitates < Language # AbstractProcess .

LanguageFamily < Entity;
    = "wikipedia::Category:Programming_language_families".
ascendantOf < Language # LanguageFamily.
descendantOf < Language # LanguageFamily.

Notation < Entity;
    = "wikipedia::File_format". //not really a good link
encodedAs < Language # Notation. // !!Experimental!!
Text : Notation;
    = "http://www.iue.tuwien.ac.at/phd/fasching/node26.html".
Binary : Notation;
    = "http://www.iue.tuwien.ac.at/phd/fasching/node27.html".
Visual : Notation;
    = "wikipedia::Data_visualization".
Markup : Notation;
    = "wikipedia::Markup_language".

TypeSystem < Entity;
    = "wikipedia::Type_system".
typedBy < Language # TypeSystem.
StaticTyping : TypeSystem;
    = "wikipedia::Type_system#Static_type_checking".
DynamicTyping : TypeSystem;
    = "wikipedia::Type_system#Dynamic_type_checking_and_runtime_type_information".

//TODO: What kind of classifiers are declarative and imperative? They are paradigms according to the Wikipedia page.