module antlr.ErrorlistenerForParser

import antlr.Core
import antlr.Listener where{
	[
		ErrorListenerObjectLanguage / ?ListenerLanguage,
		ErrorListenerObjectsLanguage / ?ListenersLanguage ,
	//substitution for parsing
		Parser / ?SubjectLanguage,
		?parserErrorListener / ?listenerBeforeApplication,
		?parserObject / ?subject,
		?parserObjectWithErrorListener / ?subjectWithListeners,
		?parserObjectWithErrorListenerAfterApplication / ?subjectWithListenersAfterApplication,
		?returnedParserErrorListeners / ?listenersAfterApplication
	]
}
/*
Error-Listeners are specialized data-structures, which processes the errors, that occur during lexing or parsing.
for more information about listeners in ANTLR or listeners in general, see module JavaANTLRErrorlistenerForLexer or module ObserverPatternExtended
 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Main Program
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
*/
?ErrorListener : System;
	="https://github.com/antlr/antlr4/blob/46b3aa98cc8d8b6908c2cabb64a9587b6b973e6c/runtime/JavaScript/src/antlr4/error/ErrorListener.js";
	="http://www.antlr.org/api/Java/org/antlr/v4/runtime/ANTLRErrorListener.html";
	reuses ANTLR.	
ErrorListenerObjectLanguage
	="https://github.com/antlr/antlr4/blob/46b3aa98cc8d8b6908c2cabb64a9587b6b973e6c/runtime/JavaScript/src/antlr4/error/ErrorListener.js";
	subsetOf JVMObject.
ErrorListenerObjectsLanguage
	="https://github.com/antlr/antlr4/blob/46b3aa98cc8d8b6908c2cabb64a9587b6b973e6c/runtime/JavaScript/src/antlr4/error/ErrorListener.js";
	subsetOf JVMObject.

/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Adding Listeners to parser
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
from substitution:
addListener : Parser # ErrorListenerObjectLanguage -> Parser.
	//="http://www.antlr.org/api/Java/org/antlr/v4/runtime/Recognizer.html#addErrorListener(org.antlr.v4.runtime.ANTLRErrorListener)".
addListener(?parserObject, ?parserErrorListener) |-> ?parserObjectWithErrorListener.	
*/
?ErrorListener implements addListener.

/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
parsing with listener
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
*/
parse : TokenStreamLanguage # Parser -> ConcreteSyntaxTreeLanguage # Parser. //the ErrorListeners are attached to the Parser
parse(?tokens, ?parserObjectWithErrorListener) |-> (?concreteSyntaxTree, ?parserObjectWithErrorListenerAfterApplication).

/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
returning Listeners after application
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
*/
getErrorListeners : Parser -> ErrorListenerObjectsLanguage.
	//="http://www.antlr.org/api/Java/org/antlr/v4/runtime/Recognizer.html#getErrorListeners()".
getErrorListeners(?parserObjectWithErrorListenerAfterApplication) |-> ?returnedParserErrorListeners.
?ErrorListener implements getErrorListeners.