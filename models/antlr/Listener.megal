module antlr.Listener

import antlr.Core
import antlr.App

/*
@Description:
Add and Get for Listeners. ANTLR facilitates the ObserverPattern, but uses
the terms subject and listener instead of subject and observer.

@Rationale:
See https://github.com/antlr/antlr4/blob/master/doc/listeners.md
*/
ANTLR facilitates ObserverPattern.
?ListenerLanguage : ValueLanguage;
    ^implements ANTLR;
    subsetOf JVMObjectLanguage.
?SubjectLanguage : ValueLanguage;
    ^implements ANTLR;
    subsetOf JVMObjectLanguage.
addListener : ?SubjectLanguage # ?ListenerLanguage -> ?SubjectLanguage.
?App implements addListener.    
getListeners : ?SubjectLanguage -> ?ListenerLanguage.
?App implements getListeners.    

/*
@Description:
A concrete scenario could have participants as follows.

@Rationale: 
See substituting Applications
*/
?subject0 : Transient;
    elementOf ?SubjectLanguage;
    hasRole Subject.
?subject1 : Transient;
    elementOf ?SubjectLanguage;
    hasRole Subject.
?subject2 : Transient;
    elementOf ?SubjectLanguage;
    hasRole Subject.
?listener0 : Transient;
    elementOf ?ListenerLanguage;
    hasRole Observer.
?listener2 : Transient;
    elementOf ?ListenerLanguage;
    hasRole Observer.
addListener(?subject0, ?listener0) |-> ?subject1.	  
//something happens between function usages of addListener and getListeners
getListeners(?subject2) |-> ?listener2.
