module antlr.CodeGeneration

import antlr.Core 

/*
@Description:
    several artifacts are actually generated. At first, the lexer implementation is generated.
    Second, the parser implementation is generated.
@Rationale:
    See parser call in demo
*/
?grammar : Artifact; 
	manifestsAs File+;
	elementOf G4;
	hasRole Grammar.
?lexerFiles : Artifact;
	elementOf ANTLRJava;
	manifestsAs File+;
    hasRole Lexer.
?parserFiles : Artifact;
	elementOf ANTLRJava;
	manifestsAs File+;
    hasRole Parser.
generateLexer : G4 -> ANTLRJava .
generateParser : G4 -> ANTLRJava .
ANTLR implements generateLexer;
    implements generateParser.
generateLexer(?grammar) |-> ?lexerFiles .
generateParser(?grammar) |-> ?parserFiles .