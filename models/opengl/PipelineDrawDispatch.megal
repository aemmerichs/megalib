module opengl.PipelineDrawDispatch

import opengl.Pipeline


/* 
@Description:
	Generate a draw call and switch between different rendering modes (e.g. rendering or compute shading).
	If a Compute Shader is linked, it may be executed in this stage. If not, a drawcall is generated and executed. Usually, this stage is implemented in the graphics driver and CPU bound.
	
@Rationale:
	Common information: https://www.khronos.org/opengl/wiki/Vertex_Specification
	For information about CPU-GPU parts: http://on-demand.gputechconf.com/siggraph/2015/presentation/SIG1512-Tristan-Lorach.pdf#page=6
*/
drawDispatch : ?StorageLanguage -> GlslArray.


/* A collection of information for a specific case. */
ParameterSet : Role;
	= "wikipedia::Parameter_(computer_programming)".

/*
@Description:
	Contains information about a draw call for rendering or if it is a state query, to receive information about the currently bound context. The graphics driver handles the query objects.

@Rationale:
	https://www.khronos.org/registry/OpenGL/specs/gl/glspec44.core.pdf#page=46
*/
?queryObject : Artifact;
	= "glspec::glspec44.core.pdf#page=46";
	elementOf ?StorageLanguage;
	hasRole ParameterSet;
	manifestsAs Transient.

/*
@Description:
	Has information about rendering e.g. conditional rendering, instancing, number of vertices, bound buffers, ...
	
@Rationale:
	https://www.khronos.org/registry/OpenGL/specs/gl/glspec44.core.pdf#page=347
*/
?drawCall : Artifact;
	= "glspec::glspec44.core.pdf#page=347";
	elementOf GlslArray;
	consistentWith ?queryObject;
	manifestsAs Transient.


/*
@Description:
	The graphics driver processes the incoming query object and creates a draw call. The draw call is send to the graphics card.
	
@Rationale:
	//TODO
	https://www.khronos.org/registry/OpenGL/specs/gl/glspec44.core.pdf#page=347
*/
drawDispatch(?queryObject) |-> ?drawCall.
drawDispatch ^composedOf glPipeline.
drawDispatch concretizes DrawProcessing.

/* It's part of the pipeline and therefore graphics card dependend. */
?OpenGLPipeline implements drawDispatch.
	

/*
@Description:
	Receive a Query object and create a draw call or skip this query.
	
@Rationale:
	https://www.khronos.org/opengl/wikiVertex_Rendering#Conditional_rendering
*/
ConditionalRendering : AbstractProcess;
	= "glwiki::Vertex_Rendering#Conditional_rendering";
	^uses ?OpenGLPipeline.

	
/*
@Description:
	Execute the draw call in the pipeline.
	
@Rationale:
	http://on-demand.gputechconf.com/siggraph/2015/presentation/SIG1512-Tristan-Lorach.pdf#page=6
	https://books.google.de/books?id=_FnSBQAAQBAJ&pg=PA29
*/
DrawDispatching : AbstractProcess;
	= "https://books.google.de/books?id=_FnSBQAAQBAJ&pg=PA29";
	^uses ?OpenGLPipeline.
	