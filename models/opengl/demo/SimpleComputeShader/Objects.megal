module opengl.demo.SimpleComputeShader.Objects

import opengl.Core

import opengl.Objects.Buffer where {
    [
        dataBuffer / ?buffer,
        dataBufferStorage /?bufferStorage
    ]
}

import opengl.Objects.Shader where {
    [
        computeShader / ?shader,
        computeShaderSource / ?shaderSource,
        computeShaderBinary / ?shaderBinary
    ]
}

import opengl.Objects.Program where {
    [
        shaderProgram / ?program,
        computeShader / ?attachedShaders
    ]
}   

//
// Buffer Objects
//

/* Provides storage for the compute shader output. */
//++?buffer : Transient;
//++    = "glwiki::Buffer_Object".
dataBuffer ~= "file://../code/src/executables/Ex03_SimpleComputeShader/main.cpp#lines=71-73".
//The buffer storage is generated by calling glBufferStorage.
dataBufferStorage ~= "file://../code/src/executables/Ex02_SimpleGeometryShader/main.cpp#line=73".
    
//
// Shader
//

/* The shader code */
computeShaderSource ~= "file://../code/src/shaders/Examples/ex03_simpleCompute.comp".

/* A shader program object. This is linked to the pipeline and contains the executable shader code. */
shaderProgram 
    ~= "file://../code/src/executables/Ex03_SimpleComputeShader/main.cpp#line=66";
    ~= "file://../code/src/libraries/Common/Shader.cpp#line=74".
    
/* The code to execute on the GPU */
//++?shaderProgram : Transient;
//++    = "glwiki::GLSL_Object#Program_objects";
//++    hasRole Shader.

computeShader ~= "file://../code/src/libraries/Common/Shader.cpp#line=233".